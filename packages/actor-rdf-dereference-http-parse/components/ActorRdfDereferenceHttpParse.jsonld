{
  "@context": [
    "https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-rdf-dereference-http-parse/^1.0.0/components/context.jsonld",
    "https://linkedsoftwaredependencies.org/bundles/npm/@comunica/core/^1.0.0/components/context.jsonld",
    "https://linkedsoftwaredependencies.org/bundles/npm/@comunica/bus-rdf-dereference/^1.0.0/components/context.jsonld"
  ],
  "@id": "npmd:@comunica/actor-rdf-dereference-http-parse",
  "components": [
    {
      "@id": "cardhp:components/ActorRdfDereferenceHttpParse.jsonld#ActorRdfDereferenceHttpParse",
      "@type": "Class",
      "requireElement": "ActorRdfDereferenceHttpParse",
      "extends": [
        "cardhp:components/ActorRdfDereferenceHttpParseBase.jsonld#ActorRdfDereferenceHttpParseBase"
      ],
      "comment": "The non-browser variant of {@link ActorRdfDereferenceHttpParse}.",
      "parameters": [
        {
          "@id": "cardhp:components/ActorRdfDereferenceHttpParse.jsonld#ActorRdfDereferenceHttpParse_args_mediatorHttp",
          "range": "cc:components/Mediator.jsonld#Mediator",
          "comment": "The HTTP mediator."
        },
        {
          "@id": "cardhp:components/ActorRdfDereferenceHttpParse.jsonld#ActorRdfDereferenceHttpParse_args_mediatorRdfParseMediatypes",
          "range": "cc:components/Mediator.jsonld#Mediator",
          "comment": "The RDF Parse mediator for collecting media types."
        },
        {
          "@id": "cardhp:components/ActorRdfDereferenceHttpParse.jsonld#ActorRdfDereferenceHttpParse_args_mediatorRdfParseHandle",
          "range": "cc:components/Mediator.jsonld#Mediator",
          "comment": "The RDF Parse mediator for handling parsing."
        },
        {
          "@id": "cardhp:components/ActorRdfDereferenceHttpParse.jsonld#ActorRdfDereferenceHttpParse_args_maxAcceptHeaderLength",
          "range": "xsd:integer",
          "default": "1024",
          "comment": "The maximum allowed accept header value length for non-browser environments."
        },
        {
          "@id": "cardhp:components/ActorRdfDereferenceHttpParse.jsonld#ActorRdfDereferenceHttpParse_args_maxAcceptHeaderLengthBrowser",
          "range": "xsd:integer",
          "default": "128",
          "comment": "The maximum allowed accept header value length for browser environments."
        },
        {
          "@id": "cardhp:components/ActorRdfDereferenceHttpParse.jsonld#ActorRdfDereferenceHttpParse_args_mediaMappings",
          "range": "rdf:JSON",
          "default": {
            "@type": "@json",
            "@value": {
              "ttl": "text/turtle",
              "turtle": "text/turtle",
              "nt": "application/n-triples",
              "ntriples": "application/n-triples",
              "nq": "application/n-quads",
              "nquads": "application/n-quads",
              "rdf": "application/rdf+xml",
              "rdfxml": "application/rdf+xml",
              "owl": "application/rdf+xml",
              "n3": "text/n3",
              "trig": "application/trig",
              "jsonld": "application/ld+json",
              "json": "application/json",
              "html": "text/html",
              "htm": "text/html",
              "xhtml": "application/xhtml+xml",
              "xht": "application/xhtml+xml",
              "xml": "application/xml",
              "svg": "image/svg+xml",
              "svgz": "image/svg+xml"
            }
          },
          "comment": "A collection of mappings, mapping file extensions to their corresponding media type."
        },
        {
          "@id": "cardhp:components/ActorRdfDereferenceHttpParse.jsonld#ActorRdfDereferenceHttpParse_args_name",
          "range": "xsd:string",
          "default": {
            "@id": "rdf:subject"
          },
          "comment": "The name for this actor."
        },
        {
          "@id": "cardhp:components/ActorRdfDereferenceHttpParse.jsonld#ActorRdfDereferenceHttpParse_args_bus",
          "range": "cc:components/Bus.jsonld#Bus",
          "default": {
            "@id": "cbrd:components/ActorRdfDereference.jsonld#ActorRdfDereference_default_bus",
            "@type": "cc:components/Bus.jsonld#Bus"
          },
          "comment": "The bus this actor subscribes to."
        },
        {
          "@id": "cardhp:components/ActorRdfDereferenceHttpParse.jsonld#ActorRdfDereferenceHttpParse_args_beforeActors",
          "range": {
            "@type": "ParameterRangeUnion",
            "parameterRangeElements": [
              {
                "@type": "ParameterRangeArray",
                "parameterRangeValue": "cc:components/Actor.jsonld#Actor"
              },
              {
                "@type": "ParameterRangeUndefined"
              }
            ]
          },
          "comment": "Actor that must be registered in the bus before this actor."
        }
      ],
      "constructorArguments": [
        {
          "@id": "cardhp:components/ActorRdfDereferenceHttpParse.jsonld#ActorRdfDereferenceHttpParse_args__constructorArgument",
          "fields": [
            {
              "keyRaw": "mediatorHttp",
              "value": {
                "@id": "cardhp:components/ActorRdfDereferenceHttpParse.jsonld#ActorRdfDereferenceHttpParse_args_mediatorHttp"
              }
            },
            {
              "keyRaw": "mediatorRdfParseMediatypes",
              "value": {
                "@id": "cardhp:components/ActorRdfDereferenceHttpParse.jsonld#ActorRdfDereferenceHttpParse_args_mediatorRdfParseMediatypes"
              }
            },
            {
              "keyRaw": "mediatorRdfParseHandle",
              "value": {
                "@id": "cardhp:components/ActorRdfDereferenceHttpParse.jsonld#ActorRdfDereferenceHttpParse_args_mediatorRdfParseHandle"
              }
            },
            {
              "keyRaw": "maxAcceptHeaderLength",
              "value": {
                "@id": "cardhp:components/ActorRdfDereferenceHttpParse.jsonld#ActorRdfDereferenceHttpParse_args_maxAcceptHeaderLength"
              }
            },
            {
              "keyRaw": "maxAcceptHeaderLengthBrowser",
              "value": {
                "@id": "cardhp:components/ActorRdfDereferenceHttpParse.jsonld#ActorRdfDereferenceHttpParse_args_maxAcceptHeaderLengthBrowser"
              }
            },
            {
              "keyRaw": "mediaMappings",
              "value": {
                "@id": "cardhp:components/ActorRdfDereferenceHttpParse.jsonld#ActorRdfDereferenceHttpParse_args_mediaMappings"
              }
            },
            {
              "keyRaw": "name",
              "value": {
                "@id": "cardhp:components/ActorRdfDereferenceHttpParse.jsonld#ActorRdfDereferenceHttpParse_args_name"
              }
            },
            {
              "keyRaw": "bus",
              "value": {
                "@id": "cardhp:components/ActorRdfDereferenceHttpParse.jsonld#ActorRdfDereferenceHttpParse_args_bus"
              }
            },
            {
              "keyRaw": "beforeActors",
              "value": {
                "@id": "cardhp:components/ActorRdfDereferenceHttpParse.jsonld#ActorRdfDereferenceHttpParse_args_beforeActors"
              }
            }
          ]
        }
      ]
    }
  ]
}