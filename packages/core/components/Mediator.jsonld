{
  "@context": [
    "https://linkedsoftwaredependencies.org/bundles/npm/@comunica/core/^1.0.0/components/context.jsonld"
  ],
  "@id": "npmd:@comunica/core",
  "components": [
    {
      "@id": "cc:lib/Mediator#Mediator",
      "@type": "AbstractClass",
      "requireElement": "Mediator",
      "extends": [
        "cc:lib/Mediator#IMediatorArgs"
      ],
      "comment": "A mediator can mediate an action over a bus of actors.  It does the following: 1. Accepts an action in {@link Mediator#mediate}. 2. Sends the action to the bus to test its applicability on all actors. 3. It _mediates_ over these test results. 4. It selects the _best_ actor. 5. The action is run by the _best_ actor, and the result if returned.  The _mediates_ and _best_ parts are filled in by subclasses of this abstract Mediator class.",
      "parameters": [
        {
          "@id": "cc:lib/Mediator#Mediator_args_name",
          "range": "xsd:string",
          "default": {
            "@id": "rdf:subject"
          },
          "comment": "The name for this mediator.",
          "unique": true,
          "required": true
        },
        {
          "@id": "cc:lib/Mediator#Mediator_args_bus",
          "range": "cc:lib/Bus#Bus",
          "comment": "The bus this mediator will mediate over.",
          "unique": true,
          "required": true
        }
      ],
      "constructorArguments": [
        {
          "@id": "cc:lib/Mediator#Mediator_args__constructorArgument",
          "fields": [
            {
              "keyRaw": "name",
              "value": {
                "@id": "cc:lib/Mediator#Mediator_args_name"
              }
            },
            {
              "keyRaw": "bus",
              "value": {
                "@id": "cc:lib/Mediator#Mediator_args_bus"
              }
            }
          ]
        }
      ]
    },
    {
      "@id": "cc:lib/Mediator#IMediatorArgs",
      "@type": "AbstractClass",
      "requireElement": "IMediatorArgs",
      "extends": [],
      "parameters": [],
      "constructorArguments": []
    }
  ]
}