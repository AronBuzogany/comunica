{
  "@context": [
    "https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-rdf-dereference-http-parse/^1.0.0/components/context.jsonld",
    "https://linkedsoftwaredependencies.org/bundles/npm/@comunica/core/^1.0.0/components/context.jsonld",
    "https://linkedsoftwaredependencies.org/bundles/npm/@comunica/bus-rdf-dereference/^1.0.0/components/context.jsonld"
  ],
  "@id": "npmd:@comunica/actor-rdf-dereference-http-parse",
  "components": [
    {
      "@id": "cardhp:lib/ActorRdfDereferenceHttpParse#ActorRdfDereferenceHttpParse",
      "@type": "Class",
      "requireElement": "ActorRdfDereferenceHttpParse",
      "extends": [
        "cardhp:lib/ActorRdfDereferenceHttpParseBase#ActorRdfDereferenceHttpParseBase"
      ],
      "comment": "The non-browser variant of {@link ActorRdfDereferenceHttpParse}.",
      "parameters": [
        {
          "@id": "cardhp:lib/ActorRdfDereferenceHttpParse#ActorRdfDereferenceHttpParse_args_mediatorHttp",
          "range": "cc:lib/Mediator#Mediator",
          "comment": "The HTTP mediator.",
          "unique": true,
          "required": true
        },
        {
          "@id": "cardhp:lib/ActorRdfDereferenceHttpParse#ActorRdfDereferenceHttpParse_args_mediatorRdfParseMediatypes",
          "range": "cc:lib/Mediator#Mediator",
          "comment": "The RDF Parse mediator for collecting media types.",
          "unique": true,
          "required": true
        },
        {
          "@id": "cardhp:lib/ActorRdfDereferenceHttpParse#ActorRdfDereferenceHttpParse_args_mediatorRdfParseHandle",
          "range": "cc:lib/Mediator#Mediator",
          "comment": "The RDF Parse mediator for handling parsing.",
          "unique": true,
          "required": true
        },
        {
          "@id": "cardhp:lib/ActorRdfDereferenceHttpParse#ActorRdfDereferenceHttpParse_args_maxAcceptHeaderLength",
          "range": "xsd:integer",
          "default": [
            "1024"
          ],
          "comment": "The maximum allowed accept header value length for non-browser environments.",
          "unique": true,
          "required": true
        },
        {
          "@id": "cardhp:lib/ActorRdfDereferenceHttpParse#ActorRdfDereferenceHttpParse_args_maxAcceptHeaderLengthBrowser",
          "range": "xsd:integer",
          "default": [
            "128"
          ],
          "comment": "The maximum allowed accept header value length for browser environments.",
          "unique": true,
          "required": true
        },
        {
          "@id": "cardhp:lib/ActorRdfDereferenceHttpParse#ActorRdfDereferenceHttpParse_args_mediaMappings",
          "range": "rdf:JSON",
          "default": [
            {
              "@type": "@json",
              "@value": {
                "ttl": "text/turtle",
                "turtle": "text/turtle",
                "nt": "application/n-triples",
                "ntriples": "application/n-triples",
                "nq": "application/n-quads",
                "nquads": "application/n-quads",
                "rdf": "application/rdf+xml",
                "rdfxml": "application/rdf+xml",
                "owl": "application/rdf+xml",
                "n3": "text/n3",
                "trig": "application/trig",
                "jsonld": "application/ld+json",
                "json": "application/json",
                "html": "text/html",
                "htm": "text/html",
                "xhtml": "application/xhtml+xml",
                "xht": "application/xhtml+xml",
                "xml": "application/xml",
                "svg": "image/svg+xml",
                "svgz": "image/svg+xml"
              }
            }
          ],
          "comment": "A collection of mappings, mapping file extensions to their corresponding media type.",
          "unique": true,
          "required": true
        },
        {
          "@id": "cardhp:lib/ActorRdfDereferenceHttpParse#ActorRdfDereferenceHttpParse_args_name",
          "range": "xsd:string",
          "default": [
            {
              "@id": "rdf:subject"
            }
          ],
          "comment": "The name for this actor.",
          "unique": true,
          "required": true
        },
        {
          "@id": "cardhp:lib/ActorRdfDereferenceHttpParse#ActorRdfDereferenceHttpParse_args_bus",
          "range": "cc:lib/Bus#Bus",
          "default": [
            {
              "@id": "cbrd:lib/ActorRdfDereference#ActorRdfDereference_default_bus",
              "@type": "cc:lib/Bus#Bus"
            }
          ],
          "comment": "The bus this actor subscribes to.",
          "unique": true,
          "required": true
        },
        {
          "@id": "cardhp:lib/ActorRdfDereferenceHttpParse#ActorRdfDereferenceHttpParse_args_beforeActors",
          "range": "cc:lib/Actor#Actor",
          "comment": "Actor that must be registered in the bus before this actor."
        }
      ],
      "constructorArguments": [
        {
          "@id": "cardhp:lib/ActorRdfDereferenceHttpParse#ActorRdfDereferenceHttpParse_args__constructorArgument",
          "fields": [
            {
              "keyRaw": "mediatorHttp",
              "value": {
                "@id": "cardhp:lib/ActorRdfDereferenceHttpParse#ActorRdfDereferenceHttpParse_args_mediatorHttp"
              }
            },
            {
              "keyRaw": "mediatorRdfParseMediatypes",
              "value": {
                "@id": "cardhp:lib/ActorRdfDereferenceHttpParse#ActorRdfDereferenceHttpParse_args_mediatorRdfParseMediatypes"
              }
            },
            {
              "keyRaw": "mediatorRdfParseHandle",
              "value": {
                "@id": "cardhp:lib/ActorRdfDereferenceHttpParse#ActorRdfDereferenceHttpParse_args_mediatorRdfParseHandle"
              }
            },
            {
              "keyRaw": "maxAcceptHeaderLength",
              "value": {
                "@id": "cardhp:lib/ActorRdfDereferenceHttpParse#ActorRdfDereferenceHttpParse_args_maxAcceptHeaderLength"
              }
            },
            {
              "keyRaw": "maxAcceptHeaderLengthBrowser",
              "value": {
                "@id": "cardhp:lib/ActorRdfDereferenceHttpParse#ActorRdfDereferenceHttpParse_args_maxAcceptHeaderLengthBrowser"
              }
            },
            {
              "keyRaw": "mediaMappings",
              "value": {
                "@id": "cardhp:lib/ActorRdfDereferenceHttpParse#ActorRdfDereferenceHttpParse_args_mediaMappings"
              }
            },
            {
              "keyRaw": "name",
              "value": {
                "@id": "cardhp:lib/ActorRdfDereferenceHttpParse#ActorRdfDereferenceHttpParse_args_name"
              }
            },
            {
              "keyRaw": "bus",
              "value": {
                "@id": "cardhp:lib/ActorRdfDereferenceHttpParse#ActorRdfDereferenceHttpParse_args_bus"
              }
            },
            {
              "keyRaw": "beforeActors",
              "value": {
                "@id": "cardhp:lib/ActorRdfDereferenceHttpParse#ActorRdfDereferenceHttpParse_args_beforeActors"
              }
            }
          ]
        }
      ]
    }
  ]
}