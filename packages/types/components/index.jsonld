{
  "@context": [
    "https://linkedsoftwaredependencies.org/bundles/npm/@comunica/types/^1.0.0/components/context.jsonld"
  ],
  "@id": "npmd:@comunica/types",
  "components": [
    {
      "@id": "ct:lib/index#IActorQueryOperationOutputBindings",
      "@type": "AbstractClass",
      "requireElement": "IActorQueryOperationOutputBindings",
      "extends": [
        "ct:lib/index#IActorQueryOperationOutputStream"
      ],
      "comment": "Query operation output for a bindings stream. For example: SPARQL SELECT results",
      "parameters": [],
      "constructorArguments": []
    },
    {
      "@id": "ct:lib/index#IActorQueryOperationOutputQuads",
      "@type": "AbstractClass",
      "requireElement": "IActorQueryOperationOutputQuads",
      "extends": [
        "ct:lib/index#IActorQueryOperationOutputStream"
      ],
      "comment": "Query operation output for quads. For example: SPARQL CONSTRUCT results",
      "parameters": [],
      "constructorArguments": []
    },
    {
      "@id": "ct:lib/index#IActorQueryOperationOutputBoolean",
      "@type": "AbstractClass",
      "requireElement": "IActorQueryOperationOutputBoolean",
      "extends": [
        "ct:lib/index#IActorQueryOperationOutputBase"
      ],
      "comment": "Query operation output for quads. For example: SPARQL ASK results",
      "parameters": [],
      "constructorArguments": []
    },
    {
      "@id": "ct:lib/index#IActorQueryOperationOutputUpdate",
      "@type": "AbstractClass",
      "requireElement": "IActorQueryOperationOutputUpdate",
      "extends": [
        "ct:lib/index#IActorQueryOperationOutputBase"
      ],
      "parameters": [],
      "constructorArguments": []
    },
    {
      "@id": "ct:lib/index#IActionQueryOperation",
      "@type": "AbstractClass",
      "requireElement": "IActionQueryOperation",
      "extends": [
        "ct:lib/index#IAction"
      ],
      "parameters": [],
      "constructorArguments": []
    },
    {
      "@id": "ct:lib/index#IActorQueryOperationOutputBase",
      "@type": "AbstractClass",
      "requireElement": "IActorQueryOperationOutputBase",
      "extends": [],
      "parameters": [],
      "constructorArguments": []
    },
    {
      "@id": "ct:lib/index#IMetadata",
      "@type": "AbstractClass",
      "requireElement": "IMetadata",
      "extends": [],
      "comment": "A type-safe metadata object. This interface still allows other non-standard metadata entries to be added.",
      "parameters": [],
      "constructorArguments": []
    },
    {
      "@id": "ct:lib/index#IActorQueryOperationOutputStream",
      "@type": "AbstractClass",
      "requireElement": "IActorQueryOperationOutputStream",
      "extends": [
        "ct:lib/index#IActorQueryOperationOutputBase"
      ],
      "comment": "Super interface for query operation outputs that represent some for of stream.",
      "parameters": [],
      "constructorArguments": []
    },
    {
      "@id": "ct:lib/index#IQueryExplained",
      "@type": "AbstractClass",
      "requireElement": "IQueryExplained",
      "extends": [],
      "comment": "An interface marking an explained query.",
      "parameters": [],
      "constructorArguments": []
    },
    {
      "@id": "ct:lib/index#IPhysicalQueryPlanLogger",
      "@type": "AbstractClass",
      "requireElement": "IPhysicalQueryPlanLogger",
      "extends": [],
      "comment": "A physical query plan logger collects operations, which can then be serialized as a query plan to JSON.",
      "parameters": [],
      "constructorArguments": []
    },
    {
      "@id": "ct:lib/index#IAction",
      "@type": "AbstractClass",
      "requireElement": "IAction",
      "extends": [],
      "comment": "Data interface for the type of action.",
      "parameters": [],
      "constructorArguments": []
    },
    {
      "@id": "ct:lib/index#IQueryEngine",
      "@type": "AbstractClass",
      "requireElement": "IQueryEngine",
      "extends": [],
      "parameters": [],
      "constructorArguments": []
    }
  ]
}